//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Geoizmjera_PI {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("postgresDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class postgresDataSet : global::System.Data.DataSet {
        
        private CesticeDataTable tableCestice;
        
        private KlijentDataTable tableKlijent;
        
        private MBROpcineDataTable tableMBROpcine;
        
        private PosaoDataTable tablePosao;
        
        private VrstaPoslaDataTable tableVrstaPosla;
        
        private global::System.Data.DataRelation relationCestice_IDPosla_fkey;
        
        private global::System.Data.DataRelation relationPosao_MBROpcine_fkey;
        
        private global::System.Data.DataRelation relationPosao_OIB_fkey;
        
        private global::System.Data.DataRelation relationPosao_VrstaPosla_fkey;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public postgresDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected postgresDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Cestice"] != null)) {
                    base.Tables.Add(new CesticeDataTable(ds.Tables["Cestice"]));
                }
                if ((ds.Tables["Klijent"] != null)) {
                    base.Tables.Add(new KlijentDataTable(ds.Tables["Klijent"]));
                }
                if ((ds.Tables["MBROpcine"] != null)) {
                    base.Tables.Add(new MBROpcineDataTable(ds.Tables["MBROpcine"]));
                }
                if ((ds.Tables["Posao"] != null)) {
                    base.Tables.Add(new PosaoDataTable(ds.Tables["Posao"]));
                }
                if ((ds.Tables["VrstaPosla"] != null)) {
                    base.Tables.Add(new VrstaPoslaDataTable(ds.Tables["VrstaPosla"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CesticeDataTable Cestice {
            get {
                return this.tableCestice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KlijentDataTable Klijent {
            get {
                return this.tableKlijent;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MBROpcineDataTable MBROpcine {
            get {
                return this.tableMBROpcine;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PosaoDataTable Posao {
            get {
                return this.tablePosao;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VrstaPoslaDataTable VrstaPosla {
            get {
                return this.tableVrstaPosla;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            postgresDataSet cln = ((postgresDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Cestice"] != null)) {
                    base.Tables.Add(new CesticeDataTable(ds.Tables["Cestice"]));
                }
                if ((ds.Tables["Klijent"] != null)) {
                    base.Tables.Add(new KlijentDataTable(ds.Tables["Klijent"]));
                }
                if ((ds.Tables["MBROpcine"] != null)) {
                    base.Tables.Add(new MBROpcineDataTable(ds.Tables["MBROpcine"]));
                }
                if ((ds.Tables["Posao"] != null)) {
                    base.Tables.Add(new PosaoDataTable(ds.Tables["Posao"]));
                }
                if ((ds.Tables["VrstaPosla"] != null)) {
                    base.Tables.Add(new VrstaPoslaDataTable(ds.Tables["VrstaPosla"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableCestice = ((CesticeDataTable)(base.Tables["Cestice"]));
            if ((initTable == true)) {
                if ((this.tableCestice != null)) {
                    this.tableCestice.InitVars();
                }
            }
            this.tableKlijent = ((KlijentDataTable)(base.Tables["Klijent"]));
            if ((initTable == true)) {
                if ((this.tableKlijent != null)) {
                    this.tableKlijent.InitVars();
                }
            }
            this.tableMBROpcine = ((MBROpcineDataTable)(base.Tables["MBROpcine"]));
            if ((initTable == true)) {
                if ((this.tableMBROpcine != null)) {
                    this.tableMBROpcine.InitVars();
                }
            }
            this.tablePosao = ((PosaoDataTable)(base.Tables["Posao"]));
            if ((initTable == true)) {
                if ((this.tablePosao != null)) {
                    this.tablePosao.InitVars();
                }
            }
            this.tableVrstaPosla = ((VrstaPoslaDataTable)(base.Tables["VrstaPosla"]));
            if ((initTable == true)) {
                if ((this.tableVrstaPosla != null)) {
                    this.tableVrstaPosla.InitVars();
                }
            }
            this.relationCestice_IDPosla_fkey = this.Relations["Cestice_IDPosla_fkey"];
            this.relationPosao_MBROpcine_fkey = this.Relations["Posao_MBROpcine_fkey"];
            this.relationPosao_OIB_fkey = this.Relations["Posao_OIB_fkey"];
            this.relationPosao_VrstaPosla_fkey = this.Relations["Posao_VrstaPosla_fkey"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "postgresDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/postgresDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCestice = new CesticeDataTable();
            base.Tables.Add(this.tableCestice);
            this.tableKlijent = new KlijentDataTable();
            base.Tables.Add(this.tableKlijent);
            this.tableMBROpcine = new MBROpcineDataTable();
            base.Tables.Add(this.tableMBROpcine);
            this.tablePosao = new PosaoDataTable();
            base.Tables.Add(this.tablePosao);
            this.tableVrstaPosla = new VrstaPoslaDataTable();
            base.Tables.Add(this.tableVrstaPosla);
            this.relationCestice_IDPosla_fkey = new global::System.Data.DataRelation("Cestice_IDPosla_fkey", new global::System.Data.DataColumn[] {
                        this.tablePosao.IDPoslaColumn}, new global::System.Data.DataColumn[] {
                        this.tableCestice.IDPoslaColumn}, false);
            this.Relations.Add(this.relationCestice_IDPosla_fkey);
            this.relationPosao_MBROpcine_fkey = new global::System.Data.DataRelation("Posao_MBROpcine_fkey", new global::System.Data.DataColumn[] {
                        this.tableMBROpcine.IDMBROpcineColumn}, new global::System.Data.DataColumn[] {
                        this.tablePosao.MBROpcineColumn}, false);
            this.Relations.Add(this.relationPosao_MBROpcine_fkey);
            this.relationPosao_OIB_fkey = new global::System.Data.DataRelation("Posao_OIB_fkey", new global::System.Data.DataColumn[] {
                        this.tableKlijent.OIBColumn}, new global::System.Data.DataColumn[] {
                        this.tablePosao.OIBColumn}, false);
            this.Relations.Add(this.relationPosao_OIB_fkey);
            this.relationPosao_VrstaPosla_fkey = new global::System.Data.DataRelation("Posao_VrstaPosla_fkey", new global::System.Data.DataColumn[] {
                        this.tableVrstaPosla.IDVrstaPoslaColumn}, new global::System.Data.DataColumn[] {
                        this.tablePosao.VrstaPoslaColumn}, false);
            this.Relations.Add(this.relationPosao_VrstaPosla_fkey);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCestice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeKlijent() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMBROpcine() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePosao() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeVrstaPosla() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            postgresDataSet ds = new postgresDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CesticeRowChangeEventHandler(object sender, CesticeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void KlijentRowChangeEventHandler(object sender, KlijentRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MBROpcineRowChangeEventHandler(object sender, MBROpcineRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void PosaoRowChangeEventHandler(object sender, PosaoRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void VrstaPoslaRowChangeEventHandler(object sender, VrstaPoslaRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CesticeDataTable : global::System.Data.TypedTableBase<CesticeRow> {
            
            private global::System.Data.DataColumn columnIDCestice;
            
            private global::System.Data.DataColumn columnBrojCestice;
            
            private global::System.Data.DataColumn columnIDPosla;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CesticeDataTable() {
                this.TableName = "Cestice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CesticeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CesticeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDCesticeColumn {
                get {
                    return this.columnIDCestice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BrojCesticeColumn {
                get {
                    return this.columnBrojCestice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDPoslaColumn {
                get {
                    return this.columnIDPosla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CesticeRow this[int index] {
                get {
                    return ((CesticeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CesticeRowChangeEventHandler CesticeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CesticeRowChangeEventHandler CesticeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CesticeRowChangeEventHandler CesticeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CesticeRowChangeEventHandler CesticeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCesticeRow(CesticeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CesticeRow AddCesticeRow(int IDCestice, string BrojCestice, PosaoRow parentPosaoRowByCestice_IDPosla_fkey) {
                CesticeRow rowCesticeRow = ((CesticeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IDCestice,
                        BrojCestice,
                        null};
                if ((parentPosaoRowByCestice_IDPosla_fkey != null)) {
                    columnValuesArray[2] = parentPosaoRowByCestice_IDPosla_fkey[0];
                }
                rowCesticeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCesticeRow);
                return rowCesticeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CesticeRow FindByIDCestice(int IDCestice) {
                return ((CesticeRow)(this.Rows.Find(new object[] {
                            IDCestice})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CesticeDataTable cln = ((CesticeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CesticeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnIDCestice = base.Columns["IDCestice"];
                this.columnBrojCestice = base.Columns["BrojCestice"];
                this.columnIDPosla = base.Columns["IDPosla"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnIDCestice = new global::System.Data.DataColumn("IDCestice", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDCestice);
                this.columnBrojCestice = new global::System.Data.DataColumn("BrojCestice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrojCestice);
                this.columnIDPosla = new global::System.Data.DataColumn("IDPosla", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDPosla);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIDCestice}, true));
                this.columnIDCestice.AllowDBNull = false;
                this.columnIDCestice.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CesticeRow NewCesticeRow() {
                return ((CesticeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CesticeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CesticeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CesticeRowChanged != null)) {
                    this.CesticeRowChanged(this, new CesticeRowChangeEvent(((CesticeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CesticeRowChanging != null)) {
                    this.CesticeRowChanging(this, new CesticeRowChangeEvent(((CesticeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CesticeRowDeleted != null)) {
                    this.CesticeRowDeleted(this, new CesticeRowChangeEvent(((CesticeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CesticeRowDeleting != null)) {
                    this.CesticeRowDeleting(this, new CesticeRowChangeEvent(((CesticeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCesticeRow(CesticeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                postgresDataSet ds = new postgresDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CesticeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KlijentDataTable : global::System.Data.TypedTableBase<KlijentRow> {
            
            private global::System.Data.DataColumn columnOIB;
            
            private global::System.Data.DataColumn columnIme;
            
            private global::System.Data.DataColumn columnPrezime;
            
            private global::System.Data.DataColumn columnAdresa;
            
            private global::System.Data.DataColumn columnBrojTelefona;
            
            private global::System.Data.DataColumn columnBrojMobitela;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KlijentDataTable() {
                this.TableName = "Klijent";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal KlijentDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected KlijentDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OIBColumn {
                get {
                    return this.columnOIB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImeColumn {
                get {
                    return this.columnIme;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrezimeColumn {
                get {
                    return this.columnPrezime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdresaColumn {
                get {
                    return this.columnAdresa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BrojTelefonaColumn {
                get {
                    return this.columnBrojTelefona;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BrojMobitelaColumn {
                get {
                    return this.columnBrojMobitela;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KlijentRow this[int index] {
                get {
                    return ((KlijentRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KlijentRowChangeEventHandler KlijentRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KlijentRowChangeEventHandler KlijentRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KlijentRowChangeEventHandler KlijentRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event KlijentRowChangeEventHandler KlijentRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddKlijentRow(KlijentRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KlijentRow AddKlijentRow(long OIB, string Ime, string Prezime, string Adresa, string BrojTelefona, string BrojMobitela) {
                KlijentRow rowKlijentRow = ((KlijentRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OIB,
                        Ime,
                        Prezime,
                        Adresa,
                        BrojTelefona,
                        BrojMobitela};
                rowKlijentRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKlijentRow);
                return rowKlijentRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KlijentRow FindByOIB(long OIB) {
                return ((KlijentRow)(this.Rows.Find(new object[] {
                            OIB})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                KlijentDataTable cln = ((KlijentDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KlijentDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnOIB = base.Columns["OIB"];
                this.columnIme = base.Columns["Ime"];
                this.columnPrezime = base.Columns["Prezime"];
                this.columnAdresa = base.Columns["Adresa"];
                this.columnBrojTelefona = base.Columns["BrojTelefona"];
                this.columnBrojMobitela = base.Columns["BrojMobitela"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnOIB = new global::System.Data.DataColumn("OIB", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOIB);
                this.columnIme = new global::System.Data.DataColumn("Ime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIme);
                this.columnPrezime = new global::System.Data.DataColumn("Prezime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrezime);
                this.columnAdresa = new global::System.Data.DataColumn("Adresa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdresa);
                this.columnBrojTelefona = new global::System.Data.DataColumn("BrojTelefona", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrojTelefona);
                this.columnBrojMobitela = new global::System.Data.DataColumn("BrojMobitela", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrojMobitela);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOIB}, true));
                this.columnOIB.AllowDBNull = false;
                this.columnOIB.Unique = true;
                this.columnIme.AllowDBNull = false;
                this.columnPrezime.AllowDBNull = false;
                this.columnBrojMobitela.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KlijentRow NewKlijentRow() {
                return ((KlijentRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KlijentRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(KlijentRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KlijentRowChanged != null)) {
                    this.KlijentRowChanged(this, new KlijentRowChangeEvent(((KlijentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KlijentRowChanging != null)) {
                    this.KlijentRowChanging(this, new KlijentRowChangeEvent(((KlijentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KlijentRowDeleted != null)) {
                    this.KlijentRowDeleted(this, new KlijentRowChangeEvent(((KlijentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KlijentRowDeleting != null)) {
                    this.KlijentRowDeleting(this, new KlijentRowChangeEvent(((KlijentRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveKlijentRow(KlijentRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                postgresDataSet ds = new postgresDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KlijentDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MBROpcineDataTable : global::System.Data.TypedTableBase<MBROpcineRow> {
            
            private global::System.Data.DataColumn columnIDMBROpcine;
            
            private global::System.Data.DataColumn columnImeOpcine;
            
            private global::System.Data.DataColumn columnMaticniBroj;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MBROpcineDataTable() {
                this.TableName = "MBROpcine";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MBROpcineDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MBROpcineDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDMBROpcineColumn {
                get {
                    return this.columnIDMBROpcine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImeOpcineColumn {
                get {
                    return this.columnImeOpcine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaticniBrojColumn {
                get {
                    return this.columnMaticniBroj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MBROpcineRow this[int index] {
                get {
                    return ((MBROpcineRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MBROpcineRowChangeEventHandler MBROpcineRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MBROpcineRowChangeEventHandler MBROpcineRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MBROpcineRowChangeEventHandler MBROpcineRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MBROpcineRowChangeEventHandler MBROpcineRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMBROpcineRow(MBROpcineRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MBROpcineRow AddMBROpcineRow(int IDMBROpcine, string ImeOpcine, int MaticniBroj) {
                MBROpcineRow rowMBROpcineRow = ((MBROpcineRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IDMBROpcine,
                        ImeOpcine,
                        MaticniBroj};
                rowMBROpcineRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMBROpcineRow);
                return rowMBROpcineRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MBROpcineRow FindByIDMBROpcine(int IDMBROpcine) {
                return ((MBROpcineRow)(this.Rows.Find(new object[] {
                            IDMBROpcine})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MBROpcineDataTable cln = ((MBROpcineDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MBROpcineDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnIDMBROpcine = base.Columns["IDMBROpcine"];
                this.columnImeOpcine = base.Columns["ImeOpcine"];
                this.columnMaticniBroj = base.Columns["MaticniBroj"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnIDMBROpcine = new global::System.Data.DataColumn("IDMBROpcine", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDMBROpcine);
                this.columnImeOpcine = new global::System.Data.DataColumn("ImeOpcine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImeOpcine);
                this.columnMaticniBroj = new global::System.Data.DataColumn("MaticniBroj", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaticniBroj);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIDMBROpcine}, true));
                this.columnIDMBROpcine.AllowDBNull = false;
                this.columnIDMBROpcine.Unique = true;
                this.columnImeOpcine.AllowDBNull = false;
                this.columnMaticniBroj.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MBROpcineRow NewMBROpcineRow() {
                return ((MBROpcineRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MBROpcineRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MBROpcineRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MBROpcineRowChanged != null)) {
                    this.MBROpcineRowChanged(this, new MBROpcineRowChangeEvent(((MBROpcineRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MBROpcineRowChanging != null)) {
                    this.MBROpcineRowChanging(this, new MBROpcineRowChangeEvent(((MBROpcineRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MBROpcineRowDeleted != null)) {
                    this.MBROpcineRowDeleted(this, new MBROpcineRowChangeEvent(((MBROpcineRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MBROpcineRowDeleting != null)) {
                    this.MBROpcineRowDeleting(this, new MBROpcineRowChangeEvent(((MBROpcineRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMBROpcineRow(MBROpcineRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                postgresDataSet ds = new postgresDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MBROpcineDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PosaoDataTable : global::System.Data.TypedTableBase<PosaoRow> {
            
            private global::System.Data.DataColumn columnIDPosla;
            
            private global::System.Data.DataColumn columnDatumNarudzbe;
            
            private global::System.Data.DataColumn columnDatumTerena;
            
            private global::System.Data.DataColumn columnVrijemeterena;
            
            private global::System.Data.DataColumn columnCijena;
            
            private global::System.Data.DataColumn columnNapomena;
            
            private global::System.Data.DataColumn columnVrstaPosla;
            
            private global::System.Data.DataColumn columnOIB;
            
            private global::System.Data.DataColumn columnMBROpcine;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PosaoDataTable() {
                this.TableName = "Posao";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PosaoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected PosaoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDPoslaColumn {
                get {
                    return this.columnIDPosla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DatumNarudzbeColumn {
                get {
                    return this.columnDatumNarudzbe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DatumTerenaColumn {
                get {
                    return this.columnDatumTerena;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VrijemeterenaColumn {
                get {
                    return this.columnVrijemeterena;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CijenaColumn {
                get {
                    return this.columnCijena;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NapomenaColumn {
                get {
                    return this.columnNapomena;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VrstaPoslaColumn {
                get {
                    return this.columnVrstaPosla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OIBColumn {
                get {
                    return this.columnOIB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MBROpcineColumn {
                get {
                    return this.columnMBROpcine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PosaoRow this[int index] {
                get {
                    return ((PosaoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PosaoRowChangeEventHandler PosaoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PosaoRowChangeEventHandler PosaoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PosaoRowChangeEventHandler PosaoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event PosaoRowChangeEventHandler PosaoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPosaoRow(PosaoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PosaoRow AddPosaoRow(int IDPosla, System.DateTime DatumNarudzbe, System.DateTime DatumTerena, System.TimeSpan Vrijemeterena, decimal Cijena, string Napomena, VrstaPoslaRow parentVrstaPoslaRowByPosao_VrstaPosla_fkey, KlijentRow parentKlijentRowByPosao_OIB_fkey, MBROpcineRow parentMBROpcineRowByPosao_MBROpcine_fkey) {
                PosaoRow rowPosaoRow = ((PosaoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IDPosla,
                        DatumNarudzbe,
                        DatumTerena,
                        Vrijemeterena,
                        Cijena,
                        Napomena,
                        null,
                        null,
                        null};
                if ((parentVrstaPoslaRowByPosao_VrstaPosla_fkey != null)) {
                    columnValuesArray[6] = parentVrstaPoslaRowByPosao_VrstaPosla_fkey[0];
                }
                if ((parentKlijentRowByPosao_OIB_fkey != null)) {
                    columnValuesArray[7] = parentKlijentRowByPosao_OIB_fkey[0];
                }
                if ((parentMBROpcineRowByPosao_MBROpcine_fkey != null)) {
                    columnValuesArray[8] = parentMBROpcineRowByPosao_MBROpcine_fkey[0];
                }
                rowPosaoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPosaoRow);
                return rowPosaoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PosaoRow FindByIDPosla(int IDPosla) {
                return ((PosaoRow)(this.Rows.Find(new object[] {
                            IDPosla})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PosaoDataTable cln = ((PosaoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PosaoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnIDPosla = base.Columns["IDPosla"];
                this.columnDatumNarudzbe = base.Columns["DatumNarudzbe"];
                this.columnDatumTerena = base.Columns["DatumTerena"];
                this.columnVrijemeterena = base.Columns["Vrijemeterena"];
                this.columnCijena = base.Columns["Cijena"];
                this.columnNapomena = base.Columns["Napomena"];
                this.columnVrstaPosla = base.Columns["VrstaPosla"];
                this.columnOIB = base.Columns["OIB"];
                this.columnMBROpcine = base.Columns["MBROpcine"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnIDPosla = new global::System.Data.DataColumn("IDPosla", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDPosla);
                this.columnDatumNarudzbe = new global::System.Data.DataColumn("DatumNarudzbe", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatumNarudzbe);
                this.columnDatumTerena = new global::System.Data.DataColumn("DatumTerena", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatumTerena);
                this.columnVrijemeterena = new global::System.Data.DataColumn("Vrijemeterena", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVrijemeterena);
                this.columnCijena = new global::System.Data.DataColumn("Cijena", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCijena);
                this.columnNapomena = new global::System.Data.DataColumn("Napomena", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNapomena);
                this.columnVrstaPosla = new global::System.Data.DataColumn("VrstaPosla", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVrstaPosla);
                this.columnOIB = new global::System.Data.DataColumn("OIB", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOIB);
                this.columnMBROpcine = new global::System.Data.DataColumn("MBROpcine", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMBROpcine);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIDPosla}, true));
                this.columnIDPosla.AllowDBNull = false;
                this.columnIDPosla.Unique = true;
                this.columnDatumNarudzbe.AllowDBNull = false;
                this.columnDatumTerena.AllowDBNull = false;
                this.columnVrijemeterena.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PosaoRow NewPosaoRow() {
                return ((PosaoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PosaoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PosaoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PosaoRowChanged != null)) {
                    this.PosaoRowChanged(this, new PosaoRowChangeEvent(((PosaoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PosaoRowChanging != null)) {
                    this.PosaoRowChanging(this, new PosaoRowChangeEvent(((PosaoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PosaoRowDeleted != null)) {
                    this.PosaoRowDeleted(this, new PosaoRowChangeEvent(((PosaoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PosaoRowDeleting != null)) {
                    this.PosaoRowDeleting(this, new PosaoRowChangeEvent(((PosaoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePosaoRow(PosaoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                postgresDataSet ds = new postgresDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PosaoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VrstaPoslaDataTable : global::System.Data.TypedTableBase<VrstaPoslaRow> {
            
            private global::System.Data.DataColumn columnIDVrstaPosla;
            
            private global::System.Data.DataColumn columnNaziv;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VrstaPoslaDataTable() {
                this.TableName = "VrstaPosla";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VrstaPoslaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected VrstaPoslaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDVrstaPoslaColumn {
                get {
                    return this.columnIDVrstaPosla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NazivColumn {
                get {
                    return this.columnNaziv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VrstaPoslaRow this[int index] {
                get {
                    return ((VrstaPoslaRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VrstaPoslaRowChangeEventHandler VrstaPoslaRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VrstaPoslaRowChangeEventHandler VrstaPoslaRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VrstaPoslaRowChangeEventHandler VrstaPoslaRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VrstaPoslaRowChangeEventHandler VrstaPoslaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddVrstaPoslaRow(VrstaPoslaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VrstaPoslaRow AddVrstaPoslaRow(int IDVrstaPosla, string Naziv) {
                VrstaPoslaRow rowVrstaPoslaRow = ((VrstaPoslaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IDVrstaPosla,
                        Naziv};
                rowVrstaPoslaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVrstaPoslaRow);
                return rowVrstaPoslaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VrstaPoslaRow FindByIDVrstaPosla(int IDVrstaPosla) {
                return ((VrstaPoslaRow)(this.Rows.Find(new object[] {
                            IDVrstaPosla})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VrstaPoslaDataTable cln = ((VrstaPoslaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VrstaPoslaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnIDVrstaPosla = base.Columns["IDVrstaPosla"];
                this.columnNaziv = base.Columns["Naziv"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnIDVrstaPosla = new global::System.Data.DataColumn("IDVrstaPosla", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDVrstaPosla);
                this.columnNaziv = new global::System.Data.DataColumn("Naziv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNaziv);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIDVrstaPosla}, true));
                this.columnIDVrstaPosla.AllowDBNull = false;
                this.columnIDVrstaPosla.Unique = true;
                this.columnNaziv.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VrstaPoslaRow NewVrstaPoslaRow() {
                return ((VrstaPoslaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VrstaPoslaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VrstaPoslaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VrstaPoslaRowChanged != null)) {
                    this.VrstaPoslaRowChanged(this, new VrstaPoslaRowChangeEvent(((VrstaPoslaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VrstaPoslaRowChanging != null)) {
                    this.VrstaPoslaRowChanging(this, new VrstaPoslaRowChangeEvent(((VrstaPoslaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VrstaPoslaRowDeleted != null)) {
                    this.VrstaPoslaRowDeleted(this, new VrstaPoslaRowChangeEvent(((VrstaPoslaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VrstaPoslaRowDeleting != null)) {
                    this.VrstaPoslaRowDeleting(this, new VrstaPoslaRowChangeEvent(((VrstaPoslaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveVrstaPoslaRow(VrstaPoslaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                postgresDataSet ds = new postgresDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VrstaPoslaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CesticeRow : global::System.Data.DataRow {
            
            private CesticeDataTable tableCestice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CesticeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCestice = ((CesticeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IDCestice {
                get {
                    return ((int)(this[this.tableCestice.IDCesticeColumn]));
                }
                set {
                    this[this.tableCestice.IDCesticeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BrojCestice {
                get {
                    try {
                        return ((string)(this[this.tableCestice.BrojCesticeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrojCestice\' in table \'Cestice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCestice.BrojCesticeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IDPosla {
                get {
                    try {
                        return ((int)(this[this.tableCestice.IDPoslaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDPosla\' in table \'Cestice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCestice.IDPoslaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PosaoRow PosaoRow {
                get {
                    return ((PosaoRow)(this.GetParentRow(this.Table.ParentRelations["Cestice_IDPosla_fkey"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Cestice_IDPosla_fkey"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBrojCesticeNull() {
                return this.IsNull(this.tableCestice.BrojCesticeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBrojCesticeNull() {
                this[this.tableCestice.BrojCesticeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDPoslaNull() {
                return this.IsNull(this.tableCestice.IDPoslaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDPoslaNull() {
                this[this.tableCestice.IDPoslaColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class KlijentRow : global::System.Data.DataRow {
            
            private KlijentDataTable tableKlijent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal KlijentRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKlijent = ((KlijentDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long OIB {
                get {
                    return ((long)(this[this.tableKlijent.OIBColumn]));
                }
                set {
                    this[this.tableKlijent.OIBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ime {
                get {
                    return ((string)(this[this.tableKlijent.ImeColumn]));
                }
                set {
                    this[this.tableKlijent.ImeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prezime {
                get {
                    return ((string)(this[this.tableKlijent.PrezimeColumn]));
                }
                set {
                    this[this.tableKlijent.PrezimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adresa {
                get {
                    try {
                        return ((string)(this[this.tableKlijent.AdresaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Adresa\' in table \'Klijent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKlijent.AdresaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BrojTelefona {
                get {
                    try {
                        return ((string)(this[this.tableKlijent.BrojTelefonaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrojTelefona\' in table \'Klijent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKlijent.BrojTelefonaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BrojMobitela {
                get {
                    return ((string)(this[this.tableKlijent.BrojMobitelaColumn]));
                }
                set {
                    this[this.tableKlijent.BrojMobitelaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdresaNull() {
                return this.IsNull(this.tableKlijent.AdresaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdresaNull() {
                this[this.tableKlijent.AdresaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBrojTelefonaNull() {
                return this.IsNull(this.tableKlijent.BrojTelefonaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBrojTelefonaNull() {
                this[this.tableKlijent.BrojTelefonaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PosaoRow[] GetPosaoRows() {
                if ((this.Table.ChildRelations["Posao_OIB_fkey"] == null)) {
                    return new PosaoRow[0];
                }
                else {
                    return ((PosaoRow[])(base.GetChildRows(this.Table.ChildRelations["Posao_OIB_fkey"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MBROpcineRow : global::System.Data.DataRow {
            
            private MBROpcineDataTable tableMBROpcine;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MBROpcineRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMBROpcine = ((MBROpcineDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IDMBROpcine {
                get {
                    return ((int)(this[this.tableMBROpcine.IDMBROpcineColumn]));
                }
                set {
                    this[this.tableMBROpcine.IDMBROpcineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImeOpcine {
                get {
                    return ((string)(this[this.tableMBROpcine.ImeOpcineColumn]));
                }
                set {
                    this[this.tableMBROpcine.ImeOpcineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaticniBroj {
                get {
                    return ((int)(this[this.tableMBROpcine.MaticniBrojColumn]));
                }
                set {
                    this[this.tableMBROpcine.MaticniBrojColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PosaoRow[] GetPosaoRows() {
                if ((this.Table.ChildRelations["Posao_MBROpcine_fkey"] == null)) {
                    return new PosaoRow[0];
                }
                else {
                    return ((PosaoRow[])(base.GetChildRows(this.Table.ChildRelations["Posao_MBROpcine_fkey"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PosaoRow : global::System.Data.DataRow {
            
            private PosaoDataTable tablePosao;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal PosaoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePosao = ((PosaoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IDPosla {
                get {
                    return ((int)(this[this.tablePosao.IDPoslaColumn]));
                }
                set {
                    this[this.tablePosao.IDPoslaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DatumNarudzbe {
                get {
                    return ((global::System.DateTime)(this[this.tablePosao.DatumNarudzbeColumn]));
                }
                set {
                    this[this.tablePosao.DatumNarudzbeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DatumTerena {
                get {
                    return ((global::System.DateTime)(this[this.tablePosao.DatumTerenaColumn]));
                }
                set {
                    this[this.tablePosao.DatumTerenaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.TimeSpan Vrijemeterena {
                get {
                    return ((global::System.TimeSpan)(this[this.tablePosao.VrijemeterenaColumn]));
                }
                set {
                    this[this.tablePosao.VrijemeterenaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Cijena {
                get {
                    try {
                        return ((decimal)(this[this.tablePosao.CijenaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cijena\' in table \'Posao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePosao.CijenaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Napomena {
                get {
                    try {
                        return ((string)(this[this.tablePosao.NapomenaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Napomena\' in table \'Posao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePosao.NapomenaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VrstaPosla {
                get {
                    try {
                        return ((int)(this[this.tablePosao.VrstaPoslaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VrstaPosla\' in table \'Posao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePosao.VrstaPoslaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long OIB {
                get {
                    try {
                        return ((long)(this[this.tablePosao.OIBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OIB\' in table \'Posao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePosao.OIBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MBROpcine {
                get {
                    try {
                        return ((int)(this[this.tablePosao.MBROpcineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MBROpcine\' in table \'Posao\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePosao.MBROpcineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MBROpcineRow MBROpcineRow {
                get {
                    return ((MBROpcineRow)(this.GetParentRow(this.Table.ParentRelations["Posao_MBROpcine_fkey"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Posao_MBROpcine_fkey"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KlijentRow KlijentRow {
                get {
                    return ((KlijentRow)(this.GetParentRow(this.Table.ParentRelations["Posao_OIB_fkey"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Posao_OIB_fkey"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VrstaPoslaRow VrstaPoslaRow {
                get {
                    return ((VrstaPoslaRow)(this.GetParentRow(this.Table.ParentRelations["Posao_VrstaPosla_fkey"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Posao_VrstaPosla_fkey"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCijenaNull() {
                return this.IsNull(this.tablePosao.CijenaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCijenaNull() {
                this[this.tablePosao.CijenaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNapomenaNull() {
                return this.IsNull(this.tablePosao.NapomenaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNapomenaNull() {
                this[this.tablePosao.NapomenaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVrstaPoslaNull() {
                return this.IsNull(this.tablePosao.VrstaPoslaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVrstaPoslaNull() {
                this[this.tablePosao.VrstaPoslaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOIBNull() {
                return this.IsNull(this.tablePosao.OIBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOIBNull() {
                this[this.tablePosao.OIBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMBROpcineNull() {
                return this.IsNull(this.tablePosao.MBROpcineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMBROpcineNull() {
                this[this.tablePosao.MBROpcineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CesticeRow[] GetCesticeRows() {
                if ((this.Table.ChildRelations["Cestice_IDPosla_fkey"] == null)) {
                    return new CesticeRow[0];
                }
                else {
                    return ((CesticeRow[])(base.GetChildRows(this.Table.ChildRelations["Cestice_IDPosla_fkey"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VrstaPoslaRow : global::System.Data.DataRow {
            
            private VrstaPoslaDataTable tableVrstaPosla;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VrstaPoslaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVrstaPosla = ((VrstaPoslaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IDVrstaPosla {
                get {
                    return ((int)(this[this.tableVrstaPosla.IDVrstaPoslaColumn]));
                }
                set {
                    this[this.tableVrstaPosla.IDVrstaPoslaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Naziv {
                get {
                    return ((string)(this[this.tableVrstaPosla.NazivColumn]));
                }
                set {
                    this[this.tableVrstaPosla.NazivColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PosaoRow[] GetPosaoRows() {
                if ((this.Table.ChildRelations["Posao_VrstaPosla_fkey"] == null)) {
                    return new PosaoRow[0];
                }
                else {
                    return ((PosaoRow[])(base.GetChildRows(this.Table.ChildRelations["Posao_VrstaPosla_fkey"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CesticeRowChangeEvent : global::System.EventArgs {
            
            private CesticeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CesticeRowChangeEvent(CesticeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CesticeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class KlijentRowChangeEvent : global::System.EventArgs {
            
            private KlijentRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KlijentRowChangeEvent(KlijentRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public KlijentRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MBROpcineRowChangeEvent : global::System.EventArgs {
            
            private MBROpcineRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MBROpcineRowChangeEvent(MBROpcineRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MBROpcineRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class PosaoRowChangeEvent : global::System.EventArgs {
            
            private PosaoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PosaoRowChangeEvent(PosaoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public PosaoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class VrstaPoslaRowChangeEvent : global::System.EventArgs {
            
            private VrstaPoslaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VrstaPoslaRowChangeEvent(VrstaPoslaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VrstaPoslaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Geoizmjera_PI.postgresDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CesticeTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.PostgreSql.PgSqlDataAdapter _adapter;
        
        private global::Devart.Data.PostgreSql.PgSqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.PostgreSql.PgSqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CesticeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.PostgreSql.PgSqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.PostgreSql.PgSqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.PostgreSql.PgSqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.PostgreSql.PgSqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.PostgreSql.PgSqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Cestice";
            tableMapping.ColumnMappings.Add("IDCestice", "IDCestice");
            tableMapping.ColumnMappings.Add("BrojCestice", "BrojCestice");
            tableMapping.ColumnMappings.Add("IDPosla", "IDPosla");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""public"".""Cestice"" WHERE ((""IDCestice"" = :Original_IDCestice) AND ((:IsNull_BrojCestice = 1 AND ""BrojCestice"" IS NULL) OR (""BrojCestice"" = :Original_BrojCestice)) AND ((:IsNull_IDPosla = 1 AND ""IDPosla"" IS NULL) OR (""IDPosla"" = :Original_IDPosla)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_IDCestice";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDCestice";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_BrojCestice";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "BrojCestice";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_BrojCestice";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BrojCestice";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_IDPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDPosla";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_IDPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDPosla";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"public\".\"Cestice\" (\"IDCestice\", \"BrojCestice\", \"IDPosla\") VALUES (:I" +
                "DCestice, :BrojCestice, :IDPosla)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IDCestice";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDCestice";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "BrojCestice";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BrojCestice";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IDPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDPosla";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""public"".""Cestice"" SET ""IDCestice"" = :IDCestice, ""BrojCestice"" = :BrojCestice, ""IDPosla"" = :IDPosla WHERE ((""IDCestice"" = :Original_IDCestice) AND ((:IsNull_BrojCestice = 1 AND ""BrojCestice"" IS NULL) OR (""BrojCestice"" = :Original_BrojCestice)) AND ((:IsNull_IDPosla = 1 AND ""IDPosla"" IS NULL) OR (""IDPosla"" = :Original_IDPosla)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IDCestice";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDCestice";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "BrojCestice";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BrojCestice";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IDPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDPosla";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_IDCestice";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDCestice";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_BrojCestice";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "BrojCestice";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_BrojCestice";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BrojCestice";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_IDPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDPosla";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_IDPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDPosla";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.PostgreSql.PgSqlConnection();
            this._connection.ConnectionString = global::Geoizmjera_PI.Properties.Settings.Default.postgresConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.PostgreSql.PgSqlCommand[2];
            this._commandCollection[0] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"IDCestice\", \"BrojCestice\", \"IDPosla\" FROM \"public\".\"Cestice\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT \"IDCestice\", \"BrojCestice\", \"IDPosla\" FROM \"public\".\"Cestice\" where\r\n\"IDPo" +
                "sla\" =? ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "PARAM1";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "IDPosla";
            this._commandCollection[1].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(postgresDataSet.CesticeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual postgresDataSet.CesticeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            postgresDataSet.CesticeDataTable dataTable = new postgresDataSet.CesticeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByIDPosla(postgresDataSet.CesticeDataTable dataTable, int PARAM1) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PARAM1));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual postgresDataSet.CesticeDataTable GetDataByIDPosla(int PARAM1) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PARAM1));
            postgresDataSet.CesticeDataTable dataTable = new postgresDataSet.CesticeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(postgresDataSet.CesticeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(postgresDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Cestice");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_IDCestice, string Original_BrojCestice, int Original_IDPosla) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_IDCestice));
            if ((Original_BrojCestice == null)) {
                throw new global::System.ArgumentNullException("Original_BrojCestice");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_BrojCestice));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_IDPosla));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int IDCestice, string BrojCestice, int IDPosla) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IDCestice));
            if ((BrojCestice == null)) {
                throw new global::System.ArgumentNullException("BrojCestice");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BrojCestice));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(IDPosla));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int IDCestice, string BrojCestice, int IDPosla, int Original_IDCestice, string Original_BrojCestice, int Original_IDPosla) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(IDCestice));
            if ((BrojCestice == null)) {
                throw new global::System.ArgumentNullException("BrojCestice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(BrojCestice));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(IDPosla));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_IDCestice));
            if ((Original_BrojCestice == null)) {
                throw new global::System.ArgumentNullException("Original_BrojCestice");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_BrojCestice));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_IDPosla));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string BrojCestice, int IDPosla, int Original_IDCestice, string Original_BrojCestice, int Original_IDPosla) {
            return this.Update(Original_IDCestice, BrojCestice, IDPosla, Original_IDCestice, Original_BrojCestice, Original_IDPosla);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KlijentTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.PostgreSql.PgSqlDataAdapter _adapter;
        
        private global::Devart.Data.PostgreSql.PgSqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.PostgreSql.PgSqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public KlijentTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.PostgreSql.PgSqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.PostgreSql.PgSqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.PostgreSql.PgSqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.PostgreSql.PgSqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.PostgreSql.PgSqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Klijent";
            tableMapping.ColumnMappings.Add("OIB", "OIB");
            tableMapping.ColumnMappings.Add("Ime", "Ime");
            tableMapping.ColumnMappings.Add("Prezime", "Prezime");
            tableMapping.ColumnMappings.Add("Adresa", "Adresa");
            tableMapping.ColumnMappings.Add("BrojTelefona", "BrojTelefona");
            tableMapping.ColumnMappings.Add("BrojMobitela", "BrojMobitela");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""public"".""Klijent"" WHERE ((""OIB"" = :Original_OIB) AND (""Ime"" = :Original_Ime) AND (""Prezime"" = :Original_Prezime) AND ((:IsNull_Adresa = 1 AND ""Adresa"" IS NULL) OR (""Adresa"" = :Original_Adresa)) AND ((:IsNull_BrojTelefona = 1 AND ""BrojTelefona"" IS NULL) OR (""BrojTelefona"" = :Original_BrojTelefona)) AND (""BrojMobitela"" = :Original_BrojMobitela))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_OIB";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "OIB";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_Ime";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Ime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_Prezime";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Prezime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_Adresa";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "Adresa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_Adresa";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Adresa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_BrojTelefona";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "BrojTelefona";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_BrojTelefona";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BrojTelefona";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_BrojMobitela";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BrojMobitela";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"public\".\"Klijent\" (\"OIB\", \"Ime\", \"Prezime\", \"Adresa\", \"BrojTelefona\"" +
                ", \"BrojMobitela\") VALUES (:OIB, :Ime, :Prezime, :Adresa, :BrojTelefona, :BrojMob" +
                "itela)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "OIB";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "OIB";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Ime";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Ime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Prezime";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Prezime";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Adresa";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Adresa";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "BrojTelefona";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BrojTelefona";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "BrojMobitela";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BrojMobitela";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""public"".""Klijent"" SET ""OIB"" = :OIB, ""Ime"" = :Ime, ""Prezime"" = :Prezime, ""Adresa"" = :Adresa, ""BrojTelefona"" = :BrojTelefona, ""BrojMobitela"" = :BrojMobitela WHERE ((""OIB"" = :Original_OIB) AND (""Ime"" = :Original_Ime) AND (""Prezime"" = :Original_Prezime) AND ((:IsNull_Adresa = 1 AND ""Adresa"" IS NULL) OR (""Adresa"" = :Original_Adresa)) AND ((:IsNull_BrojTelefona = 1 AND ""BrojTelefona"" IS NULL) OR (""BrojTelefona"" = :Original_BrojTelefona)) AND (""BrojMobitela"" = :Original_BrojMobitela))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "OIB";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "OIB";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Ime";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Ime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Prezime";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Prezime";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Adresa";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Adresa";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "BrojTelefona";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BrojTelefona";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "BrojMobitela";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BrojMobitela";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_OIB";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "OIB";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_Ime";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Ime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_Prezime";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Prezime";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_Adresa";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "Adresa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_Adresa";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Adresa";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_BrojTelefona";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "BrojTelefona";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_BrojTelefona";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BrojTelefona";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_BrojMobitela";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "BrojMobitela";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.PostgreSql.PgSqlConnection();
            this._connection.ConnectionString = global::Geoizmjera_PI.Properties.Settings.Default.postgresConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.PostgreSql.PgSqlCommand[3];
            this._commandCollection[0] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"OIB\", \"Ime\", \"Prezime\", \"Adresa\", \"BrojTelefona\", \"BrojMobitela\" FROM \"pu" +
                "blic\".\"Klijent\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT \"OIB\", \"Ime\", \"Prezime\", \"Adresa\", \"BrojTelefona\", \"BrojMobitela\" FROM \"pu" +
                "blic\".\"Klijent\" where  \"Ime\"=? and \"Prezime\"= ?";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "PARAM1";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "Ime";
            this._commandCollection[1].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "PARAM2";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "Prezime";
            this._commandCollection[1].Parameters.Add(param);
            this._commandCollection[2] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT \"OIB\", \"Ime\", \"Prezime\", \"Adresa\", \"BrojTelefona\", \"BrojMobitela\" FROM \"pu" +
                "blic\".\"Klijent\" where  \"OIB\"=?";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "PARAM1";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "OIB";
            this._commandCollection[2].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(postgresDataSet.KlijentDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual postgresDataSet.KlijentDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            postgresDataSet.KlijentDataTable dataTable = new postgresDataSet.KlijentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByImePrezime(postgresDataSet.KlijentDataTable dataTable, string PARAM1, string PARAM2) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((PARAM1 == null)) {
                throw new global::System.ArgumentNullException("PARAM1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PARAM1));
            }
            if ((PARAM2 == null)) {
                throw new global::System.ArgumentNullException("PARAM2");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(PARAM2));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual postgresDataSet.KlijentDataTable GetDataByImePrezime(string PARAM1, string PARAM2) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((PARAM1 == null)) {
                throw new global::System.ArgumentNullException("PARAM1");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PARAM1));
            }
            if ((PARAM2 == null)) {
                throw new global::System.ArgumentNullException("PARAM2");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(PARAM2));
            }
            postgresDataSet.KlijentDataTable dataTable = new postgresDataSet.KlijentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByOIB(postgresDataSet.KlijentDataTable dataTable, long PARAM1) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(PARAM1));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual postgresDataSet.KlijentDataTable GetDataByOIB(long PARAM1) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(PARAM1));
            postgresDataSet.KlijentDataTable dataTable = new postgresDataSet.KlijentDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(postgresDataSet.KlijentDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(postgresDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Klijent");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long Original_OIB, string Original_Ime, string Original_Prezime, string Original_Adresa, string Original_BrojTelefona, string Original_BrojMobitela) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_OIB));
            if ((Original_Ime == null)) {
                throw new global::System.ArgumentNullException("Original_Ime");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Ime));
            }
            if ((Original_Prezime == null)) {
                throw new global::System.ArgumentNullException("Original_Prezime");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Prezime));
            }
            if ((Original_Adresa == null)) {
                throw new global::System.ArgumentNullException("Original_Adresa");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Adresa));
            }
            if ((Original_BrojTelefona == null)) {
                throw new global::System.ArgumentNullException("Original_BrojTelefona");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_BrojTelefona));
            }
            if ((Original_BrojMobitela == null)) {
                throw new global::System.ArgumentNullException("Original_BrojMobitela");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_BrojMobitela));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long OIB, string Ime, string Prezime, string Adresa, string BrojTelefona, string BrojMobitela) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(OIB));
            if ((Ime == null)) {
                throw new global::System.ArgumentNullException("Ime");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Ime));
            }
            if ((Prezime == null)) {
                throw new global::System.ArgumentNullException("Prezime");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Prezime));
            }
            if ((Adresa == null)) {
                throw new global::System.ArgumentNullException("Adresa");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Adresa));
            }
            if ((BrojTelefona == null)) {
                throw new global::System.ArgumentNullException("BrojTelefona");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(BrojTelefona));
            }
            if ((BrojMobitela == null)) {
                throw new global::System.ArgumentNullException("BrojMobitela");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(BrojMobitela));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long OIB, string Ime, string Prezime, string Adresa, string BrojTelefona, string BrojMobitela, long Original_OIB, string Original_Ime, string Original_Prezime, string Original_Adresa, string Original_BrojTelefona, string Original_BrojMobitela) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(OIB));
            if ((Ime == null)) {
                throw new global::System.ArgumentNullException("Ime");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Ime));
            }
            if ((Prezime == null)) {
                throw new global::System.ArgumentNullException("Prezime");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Prezime));
            }
            if ((Adresa == null)) {
                throw new global::System.ArgumentNullException("Adresa");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Adresa));
            }
            if ((BrojTelefona == null)) {
                throw new global::System.ArgumentNullException("BrojTelefona");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(BrojTelefona));
            }
            if ((BrojMobitela == null)) {
                throw new global::System.ArgumentNullException("BrojMobitela");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(BrojMobitela));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(Original_OIB));
            if ((Original_Ime == null)) {
                throw new global::System.ArgumentNullException("Original_Ime");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Ime));
            }
            if ((Original_Prezime == null)) {
                throw new global::System.ArgumentNullException("Original_Prezime");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Prezime));
            }
            if ((Original_Adresa == null)) {
                throw new global::System.ArgumentNullException("Original_Adresa");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Adresa));
            }
            if ((Original_BrojTelefona == null)) {
                throw new global::System.ArgumentNullException("Original_BrojTelefona");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_BrojTelefona));
            }
            if ((Original_BrojMobitela == null)) {
                throw new global::System.ArgumentNullException("Original_BrojMobitela");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_BrojMobitela));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Ime, string Prezime, string Adresa, string BrojTelefona, string BrojMobitela, long Original_OIB, string Original_Ime, string Original_Prezime, string Original_Adresa, string Original_BrojTelefona, string Original_BrojMobitela) {
            return this.Update(Original_OIB, Ime, Prezime, Adresa, BrojTelefona, BrojMobitela, Original_OIB, Original_Ime, Original_Prezime, Original_Adresa, Original_BrojTelefona, Original_BrojMobitela);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MBROpcineTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.PostgreSql.PgSqlDataAdapter _adapter;
        
        private global::Devart.Data.PostgreSql.PgSqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.PostgreSql.PgSqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MBROpcineTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.PostgreSql.PgSqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.PostgreSql.PgSqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.PostgreSql.PgSqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.PostgreSql.PgSqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.PostgreSql.PgSqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MBROpcine";
            tableMapping.ColumnMappings.Add("IDMBROpcine", "IDMBROpcine");
            tableMapping.ColumnMappings.Add("ImeOpcine", "ImeOpcine");
            tableMapping.ColumnMappings.Add("MaticniBroj", "MaticniBroj");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"public\".\"MBROpcine\" WHERE ((\"IDMBROpcine\" = :Original_IDMBROpcine) A" +
                "ND (\"ImeOpcine\" = :Original_ImeOpcine) AND (\"MaticniBroj\" = :Original_MaticniBro" +
                "j))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_IDMBROpcine";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDMBROpcine";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_ImeOpcine";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ImeOpcine";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_MaticniBroj";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "MaticniBroj";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"public\".\"MBROpcine\" (\"IDMBROpcine\", \"ImeOpcine\", \"MaticniBroj\") VALU" +
                "ES (:IDMBROpcine, :ImeOpcine, :MaticniBroj)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IDMBROpcine";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDMBROpcine";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "ImeOpcine";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ImeOpcine";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "MaticniBroj";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "MaticniBroj";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"public\".\"MBROpcine\" SET \"IDMBROpcine\" = :IDMBROpcine, \"ImeOpcine\" = :ImeO" +
                "pcine, \"MaticniBroj\" = :MaticniBroj WHERE ((\"IDMBROpcine\" = :Original_IDMBROpcin" +
                "e) AND (\"ImeOpcine\" = :Original_ImeOpcine) AND (\"MaticniBroj\" = :Original_Maticn" +
                "iBroj))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IDMBROpcine";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDMBROpcine";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "ImeOpcine";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ImeOpcine";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "MaticniBroj";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "MaticniBroj";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_IDMBROpcine";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDMBROpcine";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_ImeOpcine";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "ImeOpcine";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_MaticniBroj";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "MaticniBroj";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.PostgreSql.PgSqlConnection();
            this._connection.ConnectionString = global::Geoizmjera_PI.Properties.Settings.Default.postgresConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.PostgreSql.PgSqlCommand[1];
            this._commandCollection[0] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"IDMBROpcine\", \"ImeOpcine\", \"MaticniBroj\" FROM \"public\".\"MBROpcine\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(postgresDataSet.MBROpcineDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual postgresDataSet.MBROpcineDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            postgresDataSet.MBROpcineDataTable dataTable = new postgresDataSet.MBROpcineDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(postgresDataSet.MBROpcineDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(postgresDataSet dataSet) {
            return this.Adapter.Update(dataSet, "MBROpcine");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_IDMBROpcine, string Original_ImeOpcine, int Original_MaticniBroj) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_IDMBROpcine));
            if ((Original_ImeOpcine == null)) {
                throw new global::System.ArgumentNullException("Original_ImeOpcine");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ImeOpcine));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_MaticniBroj));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int IDMBROpcine, string ImeOpcine, int MaticniBroj) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IDMBROpcine));
            if ((ImeOpcine == null)) {
                throw new global::System.ArgumentNullException("ImeOpcine");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ImeOpcine));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(MaticniBroj));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int IDMBROpcine, string ImeOpcine, int MaticniBroj, int Original_IDMBROpcine, string Original_ImeOpcine, int Original_MaticniBroj) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(IDMBROpcine));
            if ((ImeOpcine == null)) {
                throw new global::System.ArgumentNullException("ImeOpcine");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ImeOpcine));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(MaticniBroj));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_IDMBROpcine));
            if ((Original_ImeOpcine == null)) {
                throw new global::System.ArgumentNullException("Original_ImeOpcine");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_ImeOpcine));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_MaticniBroj));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ImeOpcine, int MaticniBroj, int Original_IDMBROpcine, string Original_ImeOpcine, int Original_MaticniBroj) {
            return this.Update(Original_IDMBROpcine, ImeOpcine, MaticniBroj, Original_IDMBROpcine, Original_ImeOpcine, Original_MaticniBroj);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PosaoTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.PostgreSql.PgSqlDataAdapter _adapter;
        
        private global::Devart.Data.PostgreSql.PgSqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.PostgreSql.PgSqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PosaoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.PostgreSql.PgSqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.PostgreSql.PgSqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.PostgreSql.PgSqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.PostgreSql.PgSqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.PostgreSql.PgSqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Posao";
            tableMapping.ColumnMappings.Add("IDPosla", "IDPosla");
            tableMapping.ColumnMappings.Add("DatumNarudzbe", "DatumNarudzbe");
            tableMapping.ColumnMappings.Add("DatumTerena", "DatumTerena");
            tableMapping.ColumnMappings.Add("Vrijemeterena", "Vrijemeterena");
            tableMapping.ColumnMappings.Add("Cijena", "Cijena");
            tableMapping.ColumnMappings.Add("Napomena", "Napomena");
            tableMapping.ColumnMappings.Add("VrstaPosla", "VrstaPosla");
            tableMapping.ColumnMappings.Add("OIB", "OIB");
            tableMapping.ColumnMappings.Add("MBROpcine", "MBROpcine");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""public"".""Posao"" WHERE ((""IDPosla"" = :Original_IDPosla) AND (""DatumNarudzbe"" = :Original_DatumNarudzbe) AND (""DatumTerena"" = :Original_DatumTerena) AND (""Vrijemeterena"" = :Original_Vrijemeterena) AND ((:IsNull_Cijena = 1 AND ""Cijena"" IS NULL) OR (""Cijena"" = :Original_Cijena)) AND ((:IsNull_Napomena = 1 AND ""Napomena"" IS NULL) OR (""Napomena"" = :Original_Napomena)) AND ((:IsNull_VrstaPosla = 1 AND ""VrstaPosla"" IS NULL) OR (""VrstaPosla"" = :Original_VrstaPosla)) AND ((:IsNull_OIB = 1 AND ""OIB"" IS NULL) OR (""OIB"" = :Original_OIB)) AND ((:IsNull_MBROpcine = 1 AND ""MBROpcine"" IS NULL) OR (""MBROpcine"" = :Original_MBROpcine)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_IDPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDPosla";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_DatumNarudzbe";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "DatumNarudzbe";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_DatumTerena";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "DatumTerena";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_Vrijemeterena";
            param.DbType = global::System.Data.DbType.Time;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Time;
            param.IsNullable = true;
            param.SourceColumn = "Vrijemeterena";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_Cijena";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "Cijena";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_Cijena";
            param.DbType = global::System.Data.DbType.Currency;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Money;
            param.IsNullable = true;
            param.SourceColumn = "Cijena";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_Napomena";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "Napomena";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_Napomena";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Napomena";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_VrstaPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "VrstaPosla";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_VrstaPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "VrstaPosla";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_OIB";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "OIB";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_OIB";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "OIB";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_MBROpcine";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "MBROpcine";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_MBROpcine";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "MBROpcine";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""public"".""Posao"" (""IDPosla"", ""DatumNarudzbe"", ""DatumTerena"", ""Vrijemeterena"", ""Cijena"", ""Napomena"", ""VrstaPosla"", ""OIB"", ""MBROpcine"") VALUES (:IDPosla, :DatumNarudzbe, :DatumTerena, :Vrijemeterena, :Cijena, :Napomena, :VrstaPosla, :OIB, :MBROpcine)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IDPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDPosla";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "DatumNarudzbe";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "DatumNarudzbe";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "DatumTerena";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "DatumTerena";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Vrijemeterena";
            param.DbType = global::System.Data.DbType.Time;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Time;
            param.IsNullable = true;
            param.SourceColumn = "Vrijemeterena";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Cijena";
            param.DbType = global::System.Data.DbType.Currency;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Money;
            param.IsNullable = true;
            param.SourceColumn = "Cijena";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Napomena";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Napomena";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "VrstaPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "VrstaPosla";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "OIB";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "OIB";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "MBROpcine";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "MBROpcine";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""public"".""Posao"" SET ""IDPosla"" = :IDPosla, ""DatumNarudzbe"" = :DatumNarudzbe, ""DatumTerena"" = :DatumTerena, ""Vrijemeterena"" = :Vrijemeterena, ""Cijena"" = :Cijena, ""Napomena"" = :Napomena, ""VrstaPosla"" = :VrstaPosla, ""OIB"" = :OIB, ""MBROpcine"" = :MBROpcine WHERE ((""IDPosla"" = :Original_IDPosla) AND (""DatumNarudzbe"" = :Original_DatumNarudzbe) AND (""DatumTerena"" = :Original_DatumTerena) AND (""Vrijemeterena"" = :Original_Vrijemeterena) AND ((:IsNull_Cijena = 1 AND ""Cijena"" IS NULL) OR (""Cijena"" = :Original_Cijena)) AND ((:IsNull_Napomena = 1 AND ""Napomena"" IS NULL) OR (""Napomena"" = :Original_Napomena)) AND ((:IsNull_VrstaPosla = 1 AND ""VrstaPosla"" IS NULL) OR (""VrstaPosla"" = :Original_VrstaPosla)) AND ((:IsNull_OIB = 1 AND ""OIB"" IS NULL) OR (""OIB"" = :Original_OIB)) AND ((:IsNull_MBROpcine = 1 AND ""MBROpcine"" IS NULL) OR (""MBROpcine"" = :Original_MBROpcine)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IDPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDPosla";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "DatumNarudzbe";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "DatumNarudzbe";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "DatumTerena";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "DatumTerena";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Vrijemeterena";
            param.DbType = global::System.Data.DbType.Time;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Time;
            param.IsNullable = true;
            param.SourceColumn = "Vrijemeterena";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Cijena";
            param.DbType = global::System.Data.DbType.Currency;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Money;
            param.IsNullable = true;
            param.SourceColumn = "Cijena";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Napomena";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Napomena";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "VrstaPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "VrstaPosla";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "OIB";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "OIB";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "MBROpcine";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "MBROpcine";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_IDPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDPosla";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_DatumNarudzbe";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "DatumNarudzbe";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_DatumTerena";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.IsNullable = true;
            param.SourceColumn = "DatumTerena";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_Vrijemeterena";
            param.DbType = global::System.Data.DbType.Time;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Time;
            param.IsNullable = true;
            param.SourceColumn = "Vrijemeterena";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_Cijena";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "Cijena";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_Cijena";
            param.DbType = global::System.Data.DbType.Currency;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Money;
            param.IsNullable = true;
            param.SourceColumn = "Cijena";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_Napomena";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "Napomena";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_Napomena";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Napomena";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_VrstaPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "VrstaPosla";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_VrstaPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "VrstaPosla";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_OIB";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "OIB";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_OIB";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.IsNullable = true;
            param.SourceColumn = "OIB";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IsNull_MBROpcine";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "MBROpcine";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_MBROpcine";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "MBROpcine";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.PostgreSql.PgSqlConnection();
            this._connection.ConnectionString = global::Geoizmjera_PI.Properties.Settings.Default.postgresConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.PostgreSql.PgSqlCommand[5];
            this._commandCollection[0] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"IDPosla\", \"DatumNarudzbe\", \"DatumTerena\", \"Vrijemeterena\", \"Cijena\", \"Nap" +
                "omena\", \"VrstaPosla\", \"OIB\", \"MBROpcine\" FROM \"public\".\"Posao\" order by \"DatumNa" +
                "rudzbe\", \"Vrijemeterena\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM \"public\".\"Posao\" WHERE (\"IDPosla\" = ?)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "PARAM1";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "IDPosla";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._commandCollection[1].Parameters.Add(param);
            this._commandCollection[2] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT \"IDPosla\", \"DatumNarudzbe\", \"DatumTerena\", \"Vrijemeterena\", \"Cijena\", \"Nap" +
                "omena\", \"VrstaPosla\", \"OIB\", \"MBROpcine\" FROM \"public\".\"Posao\" where  \"DatumTere" +
                "na\">=? order by \"DatumNarudzbe\", \"Vrijemeterena\"";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "PARAM1";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "DatumTerena";
            this._commandCollection[2].Parameters.Add(param);
            this._commandCollection[3] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT \"IDPosla\", \"DatumNarudzbe\", \"DatumTerena\", \"Vrijemeterena\", \"Cijena\", \"Nap" +
                "omena\", \"VrstaPosla\", \"OIB\", \"MBROpcine\" FROM \"public\".\"Posao\" where  \"DatumTere" +
                "na\"=? order by \"DatumNarudzbe\", \"Vrijemeterena\"";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "PARAM1";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "DatumTerena";
            this._commandCollection[3].Parameters.Add(param);
            this._commandCollection[4] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"INSERT INTO ""public"".""Posao"" (""IDPosla"", ""DatumNarudzbe"", ""DatumTerena"", ""Vrijemeterena"", ""Cijena"", ""Napomena"", ""VrstaPosla"", ""OIB"", ""MBROpcine"") VALUES (default, :DatumNarudzbe, :DatumTerena, :Vrijemeterena, :Cijena, :Napomena, :VrstaPosla, :OIB, :MBROpcine)";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "DatumNarudzbe";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "DatumNarudzbe";
            this._commandCollection[4].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "DatumTerena";
            param.DbType = global::System.Data.DbType.Date;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Date;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "DatumTerena";
            this._commandCollection[4].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Vrijemeterena";
            param.DbType = global::System.Data.DbType.DateTime;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Time;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "Vrijemeterena";
            this._commandCollection[4].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Cijena";
            param.DbType = global::System.Data.DbType.Decimal;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Money;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "Cijena";
            this._commandCollection[4].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Napomena";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "Napomena";
            this._commandCollection[4].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "VrstaPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "VrstaPosla";
            this._commandCollection[4].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "OIB";
            param.DbType = global::System.Data.DbType.Int64;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.BigInt;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "OIB";
            this._commandCollection[4].Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "MBROpcine";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.Size = 2147483647;
            param.IsNullable = true;
            param.SourceColumn = "MBROpcine";
            this._commandCollection[4].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(postgresDataSet.PosaoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual postgresDataSet.PosaoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            postgresDataSet.PosaoDataTable dataTable = new postgresDataSet.PosaoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByDDatum(postgresDataSet.PosaoDataTable dataTable, System.DateTime PARAM1) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(PARAM1));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual postgresDataSet.PosaoDataTable GetDataByDDatum(System.DateTime PARAM1) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(PARAM1));
            postgresDataSet.PosaoDataTable dataTable = new postgresDataSet.PosaoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByExactDate(postgresDataSet.PosaoDataTable dataTable, System.DateTime PARAM1) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(PARAM1));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual postgresDataSet.PosaoDataTable GetDataByExactDate(System.DateTime PARAM1) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(PARAM1));
            postgresDataSet.PosaoDataTable dataTable = new postgresDataSet.PosaoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(postgresDataSet.PosaoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(postgresDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Posao");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_IDPosla, System.DateTime Original_DatumNarudzbe, System.DateTime Original_DatumTerena, System.DateTime Original_Vrijemeterena, decimal Original_Cijena, string Original_Napomena, int Original_VrstaPosla, long Original_OIB, int Original_MBROpcine) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_IDPosla));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_DatumNarudzbe));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_DatumTerena));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_Vrijemeterena));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_Cijena));
            if ((Original_Napomena == null)) {
                throw new global::System.ArgumentNullException("Original_Napomena");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Napomena));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_VrstaPosla));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((long)(Original_OIB));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_MBROpcine));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int IDPosla, System.DateTime DatumNarudzbe, System.DateTime DatumTerena, System.DateTime Vrijemeterena, decimal Cijena, string Napomena, int VrstaPosla, long OIB, int MBROpcine) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IDPosla));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DatumNarudzbe));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(DatumTerena));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Vrijemeterena));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(Cijena));
            if ((Napomena == null)) {
                throw new global::System.ArgumentNullException("Napomena");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Napomena));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(VrstaPosla));
            this.Adapter.InsertCommand.Parameters[7].Value = ((long)(OIB));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(MBROpcine));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int IDPosla, 
                    System.DateTime DatumNarudzbe, 
                    System.DateTime DatumTerena, 
                    System.DateTime Vrijemeterena, 
                    decimal Cijena, 
                    string Napomena, 
                    int VrstaPosla, 
                    long OIB, 
                    int MBROpcine, 
                    int Original_IDPosla, 
                    System.DateTime Original_DatumNarudzbe, 
                    System.DateTime Original_DatumTerena, 
                    System.DateTime Original_Vrijemeterena, 
                    decimal Original_Cijena, 
                    string Original_Napomena, 
                    int Original_VrstaPosla, 
                    long Original_OIB, 
                    int Original_MBROpcine) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(IDPosla));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DatumNarudzbe));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(DatumTerena));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Vrijemeterena));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Cijena));
            if ((Napomena == null)) {
                throw new global::System.ArgumentNullException("Napomena");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Napomena));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(VrstaPosla));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(OIB));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(MBROpcine));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_IDPosla));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_DatumNarudzbe));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_DatumTerena));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_Vrijemeterena));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_Cijena));
            if ((Original_Napomena == null)) {
                throw new global::System.ArgumentNullException("Original_Napomena");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Napomena));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_VrstaPosla));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((long)(Original_OIB));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_MBROpcine));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime DatumNarudzbe, 
                    System.DateTime DatumTerena, 
                    System.DateTime Vrijemeterena, 
                    decimal Cijena, 
                    string Napomena, 
                    int VrstaPosla, 
                    long OIB, 
                    int MBROpcine, 
                    int Original_IDPosla, 
                    System.DateTime Original_DatumNarudzbe, 
                    System.DateTime Original_DatumTerena, 
                    System.DateTime Original_Vrijemeterena, 
                    decimal Original_Cijena, 
                    string Original_Napomena, 
                    int Original_VrstaPosla, 
                    long Original_OIB, 
                    int Original_MBROpcine) {
            return this.Update(Original_IDPosla, DatumNarudzbe, DatumTerena, Vrijemeterena, Cijena, Napomena, VrstaPosla, OIB, MBROpcine, Original_IDPosla, Original_DatumNarudzbe, Original_DatumTerena, Original_Vrijemeterena, Original_Cijena, Original_Napomena, Original_VrstaPosla, Original_OIB, Original_MBROpcine);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeletePosao(int PARAM1) {
            global::Devart.Data.PostgreSql.PgSqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((int)(PARAM1));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertQueryPosao(System.DateTime DatumNarudzbe, System.DateTime DatumTerena, System.DateTime Vrijemeterena, decimal Cijena, string Napomena, int VrstaPosla, long OIB, int MBROpcine) {
            global::Devart.Data.PostgreSql.PgSqlCommand command = this.CommandCollection[4];
            command.Parameters[0].Value = ((System.DateTime)(DatumNarudzbe));
            command.Parameters[1].Value = ((System.DateTime)(DatumTerena));
            command.Parameters[2].Value = ((System.DateTime)(Vrijemeterena));
            command.Parameters[3].Value = ((decimal)(Cijena));
            if ((Napomena == null)) {
                throw new global::System.ArgumentNullException("Napomena");
            }
            else {
                command.Parameters[4].Value = ((string)(Napomena));
            }
            command.Parameters[5].Value = ((int)(VrstaPosla));
            command.Parameters[6].Value = ((long)(OIB));
            command.Parameters[7].Value = ((int)(MBROpcine));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VrstaPoslaTableAdapter : global::System.ComponentModel.Component {
        
        private global::Devart.Data.PostgreSql.PgSqlDataAdapter _adapter;
        
        private global::Devart.Data.PostgreSql.PgSqlConnection _connection;
        
        private global::System.Data.Common.DbTransaction _transaction;
        
        private global::Devart.Data.PostgreSql.PgSqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public VrstaPoslaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::Devart.Data.PostgreSql.PgSqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::Devart.Data.PostgreSql.PgSqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Devart.Data.PostgreSql.PgSqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Common.DbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::Devart.Data.PostgreSql.PgSqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Devart.Data.PostgreSql.PgSqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VrstaPosla";
            tableMapping.ColumnMappings.Add("IDVrstaPosla", "IDVrstaPosla");
            tableMapping.ColumnMappings.Add("Naziv", "Naziv");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"public\".\"VrstaPosla\" WHERE ((\"IDVrstaPosla\" = :Original_IDVrstaPosla" +
                ") AND (\"Naziv\" = :Original_Naziv))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Devart.Data.PostgreSql.PgSqlParameter param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_IDVrstaPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDVrstaPosla";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_Naziv";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Naziv";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"public\".\"VrstaPosla\" (\"IDVrstaPosla\", \"Naziv\") VALUES (:IDVrstaPosla" +
                ", :Naziv)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IDVrstaPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDVrstaPosla";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Naziv";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Naziv";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"public\".\"VrstaPosla\" SET \"IDVrstaPosla\" = :IDVrstaPosla, \"Naziv\" = :Naziv" +
                " WHERE ((\"IDVrstaPosla\" = :Original_IDVrstaPosla) AND (\"Naziv\" = :Original_Naziv" +
                "))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "IDVrstaPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDVrstaPosla";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Naziv";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Naziv";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_IDVrstaPosla";
            param.DbType = global::System.Data.DbType.Int32;
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IDVrstaPosla";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Devart.Data.PostgreSql.PgSqlParameter();
            param.ParameterName = "Original_Naziv";
            param.PgSqlType = global::Devart.Data.PostgreSql.PgSqlType.Text;
            param.IsNullable = true;
            param.SourceColumn = "Naziv";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Devart.Data.PostgreSql.PgSqlConnection();
            this._connection.ConnectionString = global::Geoizmjera_PI.Properties.Settings.Default.postgresConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Devart.Data.PostgreSql.PgSqlCommand[1];
            this._commandCollection[0] = new global::Devart.Data.PostgreSql.PgSqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"IDVrstaPosla\", \"Naziv\" FROM \"public\".\"VrstaPosla\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(postgresDataSet.VrstaPoslaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual postgresDataSet.VrstaPoslaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            postgresDataSet.VrstaPoslaDataTable dataTable = new postgresDataSet.VrstaPoslaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(postgresDataSet.VrstaPoslaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(postgresDataSet dataSet) {
            return this.Adapter.Update(dataSet, "VrstaPosla");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_IDVrstaPosla, string Original_Naziv) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_IDVrstaPosla));
            if ((Original_Naziv == null)) {
                throw new global::System.ArgumentNullException("Original_Naziv");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Naziv));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int IDVrstaPosla, string Naziv) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(IDVrstaPosla));
            if ((Naziv == null)) {
                throw new global::System.ArgumentNullException("Naziv");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Naziv));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int IDVrstaPosla, string Naziv, int Original_IDVrstaPosla, string Original_Naziv) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(IDVrstaPosla));
            if ((Naziv == null)) {
                throw new global::System.ArgumentNullException("Naziv");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Naziv));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_IDVrstaPosla));
            if ((Original_Naziv == null)) {
                throw new global::System.ArgumentNullException("Original_Naziv");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Naziv));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Naziv, int Original_IDVrstaPosla, string Original_Naziv) {
            return this.Update(Original_IDVrstaPosla, Naziv, Original_IDVrstaPosla, Original_Naziv);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private CesticeTableAdapter _cesticeTableAdapter;
        
        private KlijentTableAdapter _klijentTableAdapter;
        
        private MBROpcineTableAdapter _mBROpcineTableAdapter;
        
        private PosaoTableAdapter _posaoTableAdapter;
        
        private VrstaPoslaTableAdapter _vrstaPoslaTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CesticeTableAdapter CesticeTableAdapter {
            get {
                return this._cesticeTableAdapter;
            }
            set {
                this._cesticeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public KlijentTableAdapter KlijentTableAdapter {
            get {
                return this._klijentTableAdapter;
            }
            set {
                this._klijentTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MBROpcineTableAdapter MBROpcineTableAdapter {
            get {
                return this._mBROpcineTableAdapter;
            }
            set {
                this._mBROpcineTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PosaoTableAdapter PosaoTableAdapter {
            get {
                return this._posaoTableAdapter;
            }
            set {
                this._posaoTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public VrstaPoslaTableAdapter VrstaPoslaTableAdapter {
            get {
                return this._vrstaPoslaTableAdapter;
            }
            set {
                this._vrstaPoslaTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._cesticeTableAdapter != null) 
                            && (this._cesticeTableAdapter.Connection != null))) {
                    return this._cesticeTableAdapter.Connection;
                }
                if (((this._klijentTableAdapter != null) 
                            && (this._klijentTableAdapter.Connection != null))) {
                    return this._klijentTableAdapter.Connection;
                }
                if (((this._mBROpcineTableAdapter != null) 
                            && (this._mBROpcineTableAdapter.Connection != null))) {
                    return this._mBROpcineTableAdapter.Connection;
                }
                if (((this._posaoTableAdapter != null) 
                            && (this._posaoTableAdapter.Connection != null))) {
                    return this._posaoTableAdapter.Connection;
                }
                if (((this._vrstaPoslaTableAdapter != null) 
                            && (this._vrstaPoslaTableAdapter.Connection != null))) {
                    return this._vrstaPoslaTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._cesticeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._klijentTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mBROpcineTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._posaoTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._vrstaPoslaTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(postgresDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._klijentTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Klijent.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._klijentTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mBROpcineTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MBROpcine.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mBROpcineTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._vrstaPoslaTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.VrstaPosla.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._vrstaPoslaTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._posaoTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Posao.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._posaoTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cesticeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Cestice.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cesticeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(postgresDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._klijentTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Klijent.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._klijentTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mBROpcineTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MBROpcine.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mBROpcineTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._vrstaPoslaTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.VrstaPosla.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._vrstaPoslaTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._posaoTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Posao.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._posaoTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cesticeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Cestice.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cesticeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(postgresDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._cesticeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Cestice.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cesticeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._posaoTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Posao.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._posaoTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._vrstaPoslaTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.VrstaPosla.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._vrstaPoslaTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mBROpcineTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MBROpcine.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mBROpcineTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._klijentTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Klijent.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._klijentTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(postgresDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._cesticeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cesticeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._klijentTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._klijentTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._mBROpcineTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mBROpcineTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._posaoTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._posaoTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._vrstaPoslaTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._vrstaPoslaTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._cesticeTableAdapter != null)) {
                    revertConnections.Add(this._cesticeTableAdapter, this._cesticeTableAdapter.Connection);
                    this._cesticeTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(workConnection));
                    this._cesticeTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._cesticeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cesticeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cesticeTableAdapter.Adapter);
                    }
                }
                if ((this._klijentTableAdapter != null)) {
                    revertConnections.Add(this._klijentTableAdapter, this._klijentTableAdapter.Connection);
                    this._klijentTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(workConnection));
                    this._klijentTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._klijentTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._klijentTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._klijentTableAdapter.Adapter);
                    }
                }
                if ((this._mBROpcineTableAdapter != null)) {
                    revertConnections.Add(this._mBROpcineTableAdapter, this._mBROpcineTableAdapter.Connection);
                    this._mBROpcineTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(workConnection));
                    this._mBROpcineTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._mBROpcineTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mBROpcineTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mBROpcineTableAdapter.Adapter);
                    }
                }
                if ((this._posaoTableAdapter != null)) {
                    revertConnections.Add(this._posaoTableAdapter, this._posaoTableAdapter.Connection);
                    this._posaoTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(workConnection));
                    this._posaoTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._posaoTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._posaoTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._posaoTableAdapter.Adapter);
                    }
                }
                if ((this._vrstaPoslaTableAdapter != null)) {
                    revertConnections.Add(this._vrstaPoslaTableAdapter, this._vrstaPoslaTableAdapter.Connection);
                    this._vrstaPoslaTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(workConnection));
                    this._vrstaPoslaTableAdapter.Transaction = ((global::System.Data.Common.DbTransaction)(workTransaction));
                    if (this._vrstaPoslaTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._vrstaPoslaTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._vrstaPoslaTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._cesticeTableAdapter != null)) {
                    this._cesticeTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(revertConnections[this._cesticeTableAdapter]));
                    this._cesticeTableAdapter.Transaction = null;
                }
                if ((this._klijentTableAdapter != null)) {
                    this._klijentTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(revertConnections[this._klijentTableAdapter]));
                    this._klijentTableAdapter.Transaction = null;
                }
                if ((this._mBROpcineTableAdapter != null)) {
                    this._mBROpcineTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(revertConnections[this._mBROpcineTableAdapter]));
                    this._mBROpcineTableAdapter.Transaction = null;
                }
                if ((this._posaoTableAdapter != null)) {
                    this._posaoTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(revertConnections[this._posaoTableAdapter]));
                    this._posaoTableAdapter.Transaction = null;
                }
                if ((this._vrstaPoslaTableAdapter != null)) {
                    this._vrstaPoslaTableAdapter.Connection = ((global::Devart.Data.PostgreSql.PgSqlConnection)(revertConnections[this._vrstaPoslaTableAdapter]));
                    this._vrstaPoslaTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591